/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tareaEjercicio;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PabloJavier
 */
public class AltasTarea extends javax.swing.JFrame {

    /**
     * Creates new form AltasTarea
     */
    ArrayList<TipoAnimalFrutas> lst = new ArrayList<>();
    DefaultTableModel modelo;
    String[] titulos = {"Descripcion", "Tipo"};
    String[] registros = new String[2];

    public AltasTarea() {
        initComponents();
        loadCmbs(cmbOpciones);
        loadCmbs(cmbFiltro);
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void loadCmbs(JComboBox combo) {
        combo.addItem("Seleccione una opcion");
        combo.addItem("Animales");
        combo.addItem("Frutas");
    }

    public void loadCombo1() {
        cmbFiltro.addItem("Seleccione una opcion");
        cmbFiltro.addItem("Animales");
        cmbFiltro.addItem("Frutas");
    }

    public void loadCombo2() {
        cmbOpciones.addItem("Seleccione una opcion");
        cmbOpciones.addItem("Animales");
        cmbOpciones.addItem("Frutas");
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbOpciones = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable();
        cmbFiltro = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        tableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableInfo);

        cmbFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFiltroItemStateChanged(evt);
            }
        });

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(61, 61, 61)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(cmbOpciones, 0, 245, Short.MAX_VALUE)
                                    .addComponent(txtDescripcion))))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(cmbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (cmbOpciones.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "No me has elegido una opcion", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            TipoAnimalFrutas tipo = new TipoAnimalFrutas();
            tipo.setDescripcion(txtDescripcion.getText());
            tipo.setTipo(cmbOpciones.getSelectedItem().toString());
            tipo.setTipoF(cmbOpciones.getSelectedIndex());
            lst.add(tipo);
            cleanTable();
            addRow();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFiltroItemStateChanged
        String opcion = cmbFiltro.getSelectedItem().toString();
        int indice = cmbFiltro.getSelectedIndex();
        cleanTable();
//        loadTable(opcion);
        loadTable(indice);
    }//GEN-LAST:event_cmbFiltroItemStateChanged

    public void loadTable(String filtro) {
        for (TipoAnimalFrutas tipoAnimalFrutas : lst) {
            if (filtro.equals("Animales") || filtro.equals("Frutas")) {
                if (tipoAnimalFrutas.getTipo().equals(filtro)) {
                    registros[0] = tipoAnimalFrutas.getDescripcion();
                    registros[1] = tipoAnimalFrutas.getTipo();
                    modelo.addRow(registros);
                }
            } else {
                registros[0] = tipoAnimalFrutas.getDescripcion();
                registros[1] = tipoAnimalFrutas.getTipo();
                modelo.addRow(registros);
            }

        }
    }

    public void loadTable(int indice) {

        for (TipoAnimalFrutas tipoAnimalFrutas : lst) {
            if (tipoAnimalFrutas.getTipoF() == 1 || tipoAnimalFrutas.getTipoF() == 2) {
                if (tipoAnimalFrutas.getTipoF() == indice) {
                    registros[0] = tipoAnimalFrutas.getDescripcion();
                    registros[1] = tipoAnimalFrutas.getTipo();
                    modelo.addRow(registros);
                }
            } else {
                registros[0] = tipoAnimalFrutas.getDescripcion();
                registros[1] = tipoAnimalFrutas.getTipo();
                modelo.addRow(registros);
            }
//        String filtro = "";
//        switch (indice) {
//            case 0:
//                filtro = "Seleccione una opcion";
//                break;
//            case 1:
//                filtro = "Animales";
//                break;
//            case 2:
//                filtro = "Frutas";
//                break;
//        }
//        loadTable(filtro);
        }
    }

    public void loadTable() {
        modelo = new DefaultTableModel(null, titulos);
        tableInfo.setModel(modelo);
    }

    private void cleanTable() {
        try {
            for (int y = 0; y >= 0; y++) {
                modelo.removeRow(0);

            }
        } catch (Exception e) {
        }
    }

    public void addRow() {
        for (TipoAnimalFrutas tipoAnimalFrutas : lst) {
            registros[0] = tipoAnimalFrutas.getDescripcion();
            registros[1] = tipoAnimalFrutas.getTipo();
            modelo.addRow(registros);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltasTarea.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltasTarea.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltasTarea.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltasTarea.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltasTarea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JComboBox<String> cmbOpciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableInfo;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
